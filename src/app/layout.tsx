import type { Metadata } from "next";
import { SignUp, StackProvider, StackTheme, SignIn } from "@stackframe/stack";
import { stackServerApp } from "../stack";

import "./layout.css";
import { NextUIProvider } from "@nextui-org/react";
import { PageFooter } from "./components/PageFooter";
import { FilterProvider } from "../app/components/FilterContext";
import SideBar2 from "./components/SideBar";
import { Suspense } from "react";
import Loading from "./loading";
import AuthPage from "./components/AuthPage";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
export const dynamic = "force-dynamic";
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const user = await stackServerApp.getUser();
  const url = "https://api.stack-auth.com/api/v1/users/me";

  return (
    <html
      id="home"
      lang="en"
      className="dark bg-background text-foreground sm:ml-20 sm:mr-20 sm:mb-20"
    >
      <body className="relative bg-background">
        <StackProvider app={stackServerApp}>
          <StackTheme>
            <FilterProvider>
              <NextUIProvider className="min-h-full ">
                {user ? (
                  <>
                    <Suspense
                      fallback={
                        <div className="flex absolute left-0 top-0 items-center justify-center h-screen w-screen ">
                          <div className="flex flex-col items-center">
                            <div className="animate-spin rounded-full h-16 w-16 border-t-4 border-blue-500"></div>
                            <p className="mt-4 text-white text-lg">
                              Loading...
                            </p>
                          </div>
                        </div>
                      }
                    >
                      <SideBar2 />
                    </Suspense>
                    <div className="flex justify-end ">{children}</div>
                    <div className="w-full flex justify-end">
                      <div className="sm:w-[65%] lg:w-[75%] ">
                        <Suspense fallback={<Loading />}>
                          <PageFooter />
                        </Suspense>
                      </div>
                    </div>
                  </>
                ) : (
                  <>
                    <Suspense fallback={<Loading />}>
                      <div className="h-screen flex items-center justify-center">
                        {/* <SignIn /> */}
                        <AuthPage />
                      </div>
                    </Suspense>
                  </>
                )}
              </NextUIProvider>
            </FilterProvider>
          </StackTheme>
        </StackProvider>
      </body>
    </html>
  );
}
